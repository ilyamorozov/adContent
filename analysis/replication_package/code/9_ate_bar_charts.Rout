
R version 4.2.2 (2022-10-31 ucrt) -- "Innocent and Trusting"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(ggpubr)
Loading required package: ggplot2
> library(rstatix)

Attaching package: 'rstatix'

The following object is masked from 'package:stats':

    filter

> library(data.table)
> 
> 
> df <- fread("../temp/data_choices_for_R.csv")
> df_lostgirls <- df[df$ad_condition == 0 | df$ad_condition <= 3]
> df_stateline <- df[df$ad_condition == 0 | df$ad_condition >= 4]
> df_lostgirls$book <- "Lost Girls"
> df_stateline$book <- "Stateline"
> df_lostgirls$purchased <- df_lostgirls$purchased_203
> df_stateline$purchased <- df_stateline$purchased_303
> df_lostgirls$searched <- df_lostgirls$clicked_203
> df_stateline$searched <- df_stateline$clicked_303
> df_master <- rbind(df_lostgirls, df_stateline)
> 
> setwd("../output/graphs/main_ate/")
> 
> ### Figure 3a: searches (advertised book) ###
> # T-test
> stat.test <- df_master %>%
+   group_by(book)       %>%
+   t_test(searched ~ ad_type, ref.group = "1ad")
> stat.test
# A tibble: 6 × 11
  book   .y.   group1 group2    n1    n2 stati…¹    df        p    p.adj p.adj…²
* <chr>  <chr> <chr>  <chr>  <int> <int>   <dbl> <dbl>    <dbl>    <dbl> <chr>  
1 Lost … sear… 1ad    2ad      462  1840   -5.55 1030. 3.65e- 8 7.3 e- 8 ****   
2 Lost … sear… 1ad    3ad      462  1829   -3.89  936. 1.07e- 4 1.07e- 4 ***    
3 Lost … sear… 1ad    4ad      462  1798   -7.03 1129. 3.61e-12 1.08e-11 ****   
4 State… sear… 1ad    2ad      462  1867   -5.72 1041. 1.41e- 8 1.41e- 8 ****   
5 State… sear… 1ad    3ad      462  1831   -6.45 1096. 1.72e-10 3.44e-10 ****   
6 State… sear… 1ad    4ad      462  1871   -6.72 1098. 2.85e-11 8.55e-11 ****   
# … with abbreviated variable names ¹​statistic, ²​p.adj.signif
> 
> # Plot
> bp <- ggbarplot(
+   df_master, x = "book", y = "searched", fill = "ad_type",
+   add = "mean_ci", add.params = list(group = "ad_type"),
+   position = position_dodge(0.8)
+ ) 
> 
> p <- bp + scale_fill_brewer(palette="Blues", labels=c('No Ads', 'Plain Ad', 'Genre Ad' , 'Price Ad')) + 
+   labs(title="Search rate of the advertised book", x ="Advertised book", y = "Searched ad book") + 
+   theme(legend.title=element_blank(), legend.position="bottom", plot.title = element_text(hjust = 0.5))
> p
> ggsave("fig3a_searches.pdf", plot = p, width = 1500, height = 1200, units = "px", dpi = 300)
> 
> 
> ### Figure 3b: purchases (advertised book) ###
> # T-test
> stat.test <- df_master %>%
+   group_by(book)       %>%
+   t_test(purchased ~ ad_type, ref.group = "1ad")
> stat.test
# A tibble: 6 × 11
  book   .y.   group1 group2    n1    n2 stati…¹    df        p    p.adj p.adj…²
* <chr>  <chr> <chr>  <chr>  <int> <int>   <dbl> <dbl>    <dbl>    <dbl> <chr>  
1 Lost … purc… 1ad    2ad      462  1840   -3.80 1034. 1.5 e- 4 3   e- 4 ***    
2 Lost … purc… 1ad    3ad      462  1829   -3.26  989. 1   e- 3 1   e- 3 **     
3 Lost … purc… 1ad    4ad      462  1798   -5.53 1205. 4.02e- 8 1.21e- 7 ****   
4 State… purc… 1ad    2ad      462  1867   -6.65 1479. 4.14e-11 4.14e-11 ****   
5 State… purc… 1ad    3ad      462  1831   -7.26 1564. 5.88e-13 1.18e-12 ****   
6 State… purc… 1ad    4ad      462  1871   -7.69 1593. 2.63e-14 7.89e-14 ****   
# … with abbreviated variable names ¹​statistic, ²​p.adj.signif
> 
> # Plot
> bp <- ggbarplot(
+   df_master, x = "book", y = "purchased", fill = "ad_type",
+   add = "mean_ci", add.params = list(group = "ad_type"),
+   position = position_dodge(0.8)
+ ) 
> 
> p <- bp + scale_fill_brewer(palette="Blues", labels=c('No Ads', 'Plain Ad', 'Genre Ad' , 'Price Ad')) + 
+   labs(title="Purchase rate of the advertised book", x ="Advertised book", y = "Purchased ad book") +
+   theme(legend.title=element_blank(), legend.position="bottom", plot.title = element_text(hjust = 0.5))
> p
> ggsave("fig3b_purchases.pdf", plot = p, width = 1500, height = 1200, units = "px", dpi = 300)
> 
> ### Figure A12a: total searches ###
> # T-test
> stat.test <- df_master %>%
+   group_by(book)       %>%
+   t_test(num_unique ~ ad_type, ref.group = "1ad")
> stat.test
# A tibble: 6 × 11
  book       .y.     group1 group2    n1    n2 stati…¹    df     p p.adj p.adj…²
* <chr>      <chr>   <chr>  <chr>  <int> <int>   <dbl> <dbl> <dbl> <dbl> <chr>  
1 Lost Girls num_un… 1ad    2ad      462  1840    1.91  618. 0.057 0.086 ns     
2 Lost Girls num_un… 1ad    3ad      462  1829    2.05  645. 0.041 0.086 ns     
3 Lost Girls num_un… 1ad    4ad      462  1798    2.19  633. 0.029 0.086 ns     
4 Stateline  num_un… 1ad    2ad      462  1867    1.73  630. 0.083 0.194 ns     
5 Stateline  num_un… 1ad    3ad      462  1831    1.85  666. 0.065 0.194 ns     
6 Stateline  num_un… 1ad    4ad      462  1871    1.70  657. 0.09  0.194 ns     
# … with abbreviated variable names ¹​statistic, ²​p.adj.signif
> 
> # Plot
> bp <- ggbarplot(
+   df_master, x = "book", y = "num_unique", fill = "ad_type",
+   add = "mean_ci", add.params = list(group = "ad_type"),
+   position = position_dodge(0.8)
+ ) 
> 
> p <- bp + scale_fill_brewer(palette="Blues", labels=c('No Ads', 'Plain Ad', 'Genre Ad' , 'Price Ad')) + 
+   labs(title="Num. products searched (all)", x ="Advertised book", y = "Unique products searched") + 
+   theme(legend.title=element_blank(), legend.position="bottom", plot.title = element_text(hjust = 0.5))
> p
> ggsave("figA12a_total_searches.pdf", plot = p, width = 1500, height = 1200, units = "px", dpi = 300)
> 
> 
> ### Figure A12b: total searches (non-advertised) ###
> # T-test
> stat.test <- df_master %>%
+   group_by(book)       %>%
+   t_test(num_unique_nonad ~ ad_type, ref.group = "1ad")
> stat.test
# A tibble: 6 × 11
  book       .y.     group1 group2    n1    n2 stati…¹    df     p p.adj p.adj…²
* <chr>      <chr>   <chr>  <chr>  <int> <int>   <dbl> <dbl> <dbl> <dbl> <chr>  
1 Lost Girls num_un… 1ad    2ad      462  1840    2.55  620. 0.011 0.022 *      
2 Lost Girls num_un… 1ad    3ad      462  1829    2.46  643. 0.014 0.022 *      
3 Lost Girls num_un… 1ad    4ad      462  1798    3.07  630. 0.002 0.007 **     
4 Stateline  num_un… 1ad    2ad      462  1867    2.39  629. 0.017 0.036 *      
5 Stateline  num_un… 1ad    3ad      462  1831    2.52  671. 0.012 0.036 *      
6 Stateline  num_un… 1ad    4ad      462  1871    2.41  655. 0.016 0.036 *      
# … with abbreviated variable names ¹​statistic, ²​p.adj.signif
> 
> # Plot
> bp <- ggbarplot(
+   df_master, x = "book", y = "num_unique_nonad", fill = "ad_type",
+   add = "mean_ci", add.params = list(group = "ad_type"),
+   position = position_dodge(0.8)
+ ) 
> 
> p <- bp + scale_fill_brewer(palette="Blues", labels=c('No Ads', 'Plain Ad', 'Genre Ad' , 'Price Ad')) + 
+   labs(title="Num. products searched (non-advertised)", x ="Advertised book", y = "Unique products searched") + 
+   theme(legend.title=element_blank(), legend.position="bottom", plot.title = element_text(hjust = 0.5))
> p
> ggsave("figA12b_total_searches_noad.pdf", plot = p, width = 1500, height = 1200, units = "px", dpi = 300)
> 
> 
> 
> ### Figure A12c: total time ###
> # T-test
> stat.test <- df_master %>%
+   group_by(book)       %>%
+   t_test(session_duration ~ ad_type, ref.group = "1ad")
> stat.test
# A tibble: 6 × 11
  book       .y.     group1 group2    n1    n2 stati…¹    df     p p.adj p.adj…²
* <chr>      <chr>   <chr>  <chr>  <int> <int>   <dbl> <dbl> <dbl> <dbl> <chr>  
1 Lost Girls sessio… 1ad    2ad      462  1840  1.15    675. 0.252 0.624 ns     
2 Lost Girls sessio… 1ad    3ad      462  1829  1.23    678. 0.22  0.624 ns     
3 Lost Girls sessio… 1ad    4ad      462  1798  1.26    676. 0.208 0.624 ns     
4 Stateline  sessio… 1ad    2ad      462  1867 -0.0450  744. 0.964 1     ns     
5 Stateline  sessio… 1ad    3ad      462  1831  0.703   702. 0.482 1     ns     
6 Stateline  sessio… 1ad    4ad      462  1871  0.899   695. 0.369 1     ns     
# … with abbreviated variable names ¹​statistic, ²​p.adj.signif
> 
> # Plot
> bp <- ggbarplot(
+   df_master, x = "book", y = "session_duration", fill = "ad_type",
+   add = "mean_ci", add.params = list(group = "ad_type"),
+   position = position_dodge(0.8)
+ ) 
> 
> p <- bp + scale_fill_brewer(palette="Blues", labels=c('No Ads', 'Plain Ad', 'Genre Ad' , 'Price Ad')) + 
+   labs(title="Session duration in minutes", x ="Advertised book", y = "Session duration (min)") + 
+   theme(legend.title=element_blank(), legend.position="bottom", plot.title = element_text(hjust = 0.5))
> p
> ggsave("figA12c_total_time.pdf", plot = p, width = 1500, height = 1200, units = "px", dpi = 300)
> 
> 
> ### Figure A12d: opened second page ###
> # T-test
> stat.test <- df_master %>%
+   group_by(book)       %>%
+   t_test(opened_second_page ~ ad_type, ref.group = "1ad")
> stat.test
# A tibble: 6 × 11
  book     .y.   group1 group2    n1    n2 stati…¹    df       p   p.adj p.adj…²
* <chr>    <chr> <chr>  <chr>  <int> <int>   <dbl> <dbl>   <dbl>   <dbl> <chr>  
1 Lost Gi… open… 1ad    2ad      462  1840    2.65  739. 8   e-3 8   e-3 **     
2 Lost Gi… open… 1ad    3ad      462  1829    2.90  743. 4   e-3 8   e-3 **     
3 Lost Gi… open… 1ad    4ad      462  1798    3.72  755. 2.15e-4 6.45e-4 ***    
4 Stateli… open… 1ad    2ad      462  1867    2.91  737. 4   e-3 4   e-3 **     
5 Stateli… open… 1ad    3ad      462  1831    3.54  748. 4.32e-4 9.69e-4 ***    
6 Stateli… open… 1ad    4ad      462  1871    3.61  743. 3.23e-4 9.69e-4 ***    
# … with abbreviated variable names ¹​statistic, ²​p.adj.signif
> 
> # Plot
> bp <- ggbarplot(
+   df_master, x = "book", y = "opened_second_page", fill = "ad_type",
+   add = "mean_ci", add.params = list(group = "ad_type"),
+   position = position_dodge(0.8)
+ ) 
> 
> p <- bp + scale_fill_brewer(palette="Blues", labels=c('No Ads', 'Plain Ad', 'Genre Ad' , 'Price Ad')) + 
+   labs(title="Prob. opened second page", x ="Advertised book", y = "Opened second page in product list") + 
+   theme(legend.title=element_blank(), legend.position="bottom", plot.title = element_text(hjust = 0.5))
> p
> ggsave("figA12d_total_second_page.pdf", plot = p, width = 1500, height = 1200, units = "px", dpi = 300)
> 
> 
> ### Figure A12e: kept book after study ###
> # T-test
> stat.test <- df_master %>%
+   group_by(book)       %>%
+   t_test(dual_response ~ ad_type, ref.group = "1ad")
> stat.test
# A tibble: 6 × 11
  book       .y.     group1 group2    n1    n2 stati…¹    df     p p.adj p.adj…²
* <chr>      <chr>   <chr>  <chr>  <int> <int>   <dbl> <dbl> <dbl> <dbl> <chr>  
1 Lost Girls dual_r… 1ad    2ad      460  1839  0.180   707. 0.858 1     ns     
2 Lost Girls dual_r… 1ad    3ad      460  1828 -0.764   702. 0.445 1     ns     
3 Lost Girls dual_r… 1ad    4ad      460  1798 -0.456   708. 0.649 1     ns     
4 Stateline  dual_r… 1ad    2ad      460  1865 -0.0977  702. 0.922 0.922 ns     
5 Stateline  dual_r… 1ad    3ad      460  1830 -1.04    700. 0.299 0.897 ns     
6 Stateline  dual_r… 1ad    4ad      460  1870 -0.942   695. 0.346 0.897 ns     
# … with abbreviated variable names ¹​statistic, ²​p.adj.signif
> 
> # Plot
> bp <- ggbarplot(
+   df_master, x = "book", y = "dual_response", fill = "ad_type",
+   add = "mean_ci", add.params = list(group = "ad_type"),
+   position = position_dodge(0.8)
+ ) 
> 
> p <- bp + scale_fill_brewer(palette="Blues", labels=c('No Ads', 'Plain Ad', 'Genre Ad' , 'Price Ad')) + 
+   labs(title="Kept book after study", x ="Advertised book", y = "Prob. kept book") + 
+   theme(legend.title=element_blank(), legend.position="bottom", plot.title = element_text(hjust = 0.5))
> p
Warning message:
Removed 10 rows containing non-finite values (`stat_summary()`). 
> ggsave("figA12e_total_kept_book.pdf", plot = p, width = 1500, height = 1200, units = "px", dpi = 300)
Warning message:
Removed 10 rows containing non-finite values (`stat_summary()`). 
> 
> 
> 
> proc.time()
   user  system elapsed 
   5.07    0.40    6.67 
